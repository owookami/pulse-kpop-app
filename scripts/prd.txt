# 개요
Pulse는 K-POP 팬들을 위한 팬캠 허브 앱입니다. 여러 플랫폼(YouTube, TikTok 등)에 흩어져 있는 K-POP 아티스트들의 팬캠 영상을 한 곳에서 편리하게 검색하고, 시청하고, 평가할 수 있는 플랫폼을 제공합니다. 팬들은 좋아하는 아티스트의 실시간 인기 팬캠을 발견하고, 좋아요와 별점을 통해 최고의 팬캠에 투표하며, 새로운 팬캠이 등록될 때 알림을 받을 수 있습니다.

# 핵심 기능

## 1. 통합 팬캠 피드
- **기능**: 다양한 플랫폼에서 수집된 K-POP 팬캠을 인기순(Trending)과 최신순(Rising)으로 제공
- **중요성**: 사용자가 여러 플랫폼을 돌아다닐 필요 없이 한 곳에서 고품질 팬캠을 발견할 수 있음
- **작동 방식**: 자동화된 크롤러가 YouTube와 TikTok에서 팬캠을 수집하고, 팬들의 투표와 품질 기준으로 랭킹을 계산

## 2. 팬 투표 시스템
- **기능**: 사용자가 팬캠에 좋아요/싫어요와 별점(1-5)을 부여
- **중요성**: 커뮤니티 기반 큐레이션으로 최고 품질의 팬캠을 상위에 노출
- **작동 방식**: 베이지안 평균 알고리즘을 활용하여 공정하고 균형 잡힌 랭킹 시스템 제공

## 3. 아티스트 팔로우
- **기능**: 사용자가 좋아하는 아티스트를 팔로우하고 새 팬캠이 등록될 때 알림 수신
- **중요성**: 팬들이 최신 컨텐츠를 놓치지 않고 지속적인 앱 사용을 유도
- **작동 방식**: 팔로우 정보를 저장하고 푸시 알림을 통해 새 컨텐츠 등록 시 알림 전송

## 4. 통합 플레이어
- **기능**: 앱 내에서 YouTube와 TikTok 비디오를 원활하게 재생
- **중요성**: 사용자가 앱을 떠나지 않고도 원활한 시청 경험을 제공
- **작동 방식**: 플랫폼별 임베디드 플레이어를 통합하고 최적화된 모바일 환경 제공

## 5. 북마크 및 개인화
- **기능**: 사용자가 좋아하는 팬캠을 북마크하고 개인 컬렉션 생성
- **중요성**: 개인화된 경험을 통해 사용자 참여도와 만족도 향상
- **작동 방식**: 사용자 활동 기반으로 팬캠을 추천하고 북마크 관리 기능 제공

# 사용자 경험

## 사용자 페르소나
1. **열성 K-POP 팬 (18-25세)**: 특정 아티스트의 모든 컨텐츠를 보고 싶어하는 코어 팬
2. **일반 K-POP 팬 (15-35세)**: 인기 있는 무대나 특별한 순간의 팬캠을 중심으로 보는 캐주얼 팬
3. **신규 K-POP 팬**: K-POP에 관심을 가지기 시작한 입문자로, 다양한 아티스트 탐색 중

## 핵심 사용자 흐름
1. **홈 피드 탐색**: 사용자는 인기 팬캠과 최신 팬캠을 스크롤하며 탐색
2. **비디오 시청 및 평가**: 팬캠을 시청하고 좋아요/별점을 부여해 커뮤니티 랭킹에 기여
3. **아티스트 팔로우**: 좋아하는 아티스트를 팔로우하고 새 컨텐츠 알림 수신
4. **검색 및 발견**: 아티스트나 곡 제목으로 검색하거나 인기 아티스트 탐색
5. **개인 컬렉션 관리**: 좋아하는 팬캠을 북마크하고 개인 컬렉션 구성

## UI/UX 고려사항
- **직관적인 네비게이션**: 주요 기능(홈, 검색, 북마크, 프로필)에 빠르게 접근할 수 있는 탭 기반 레이아웃
- **로딩 최적화**: 빠른 콘텐츠 로딩과 스크롤 경험을 위한 지연 로딩 및 캐싱
- **다크 모드 지원**: 배터리 절약과 야간 사용 편의성을 위한 라이트/다크 테마
- **반응형 디자인**: 다양한 디바이스와 화면 크기에 최적화된 경험 제공
- **사용자 피드백**: 투표, 북마크, 팔로우 등의 작업 시 즉각적인 시각적 피드백 제공

# 기술 아키텍처

## 시스템 구성요소
1. **Flutter 모바일 앱**: GoRouter와 Riverpod를 사용한 크로스 플랫폼 앱
2. **Supabase 백엔드**: 데이터베이스, 인증, 스토리지 제공
3. **Python FastAPI 크롤러**: YouTube 및 TikTok에서 팬캠 데이터 수집
4. **Supabase Edge Functions**: 실시간 랭킹 계산, 알림 등의 서버리스 함수

## 데이터 모델
1. **artists**: 아티스트 정보(이름, 이미지, 그룹 등)
2. **videos**: 팬캠 메타데이터(제목, 썸네일, URL, 소스 플랫폼 등)
3. **reviews**: 사용자 리뷰 및 평점
4. **bookmarks**: 사용자 북마크
5. **follows**: 사용자-아티스트 팔로우 관계

## API 및 통합
1. **YouTube Data API**: 팬캠 검색 및 메타데이터 수집
2. **TikTok API**: 팬캠 검색 및 메타데이터 수집
3. **Firebase Cloud Messaging**: 푸시 알림 전송
4. **인앱 결제 API**: 프리미엄 구독 처리

## 인프라 요구사항
1. **Supabase 프로젝트**: 데이터베이스, 인증, 파일 스토리지 제공
2. **Python 크롤러 호스팅**: 크롤러 서비스를 위한 Docker 컨테이너 호스팅
3. **CI/CD 파이프라인**: GitHub Actions를 통한 지속적 통합 및 배포
4. **모니터링**: Prometheus와 Grafana를 통한 시스템 모니터링

# 개발 로드맵

## MVP 요구사항
1. **기본 앱 구조**:
   - 모노레포 설정 (Melos)
   - Supabase 연동
   - 기본 UI 컴포넌트 및 테마

2. **핵심 기능**:
   - YouTube 팬캠 크롤링 및 표시
   - 기본 비디오 플레이어
   - 간단한 아티스트 검색
   - 사용자 인증 (이메일/비밀번호)

3. **데이터 모델**:
   - 주요 테이블 스키마 구현
   - 기본 RLS 정책 설정

## 향후 개선 사항
1. **플랫폼 확장**:
   - TikTok 팬캠 통합
   - 추가 소셜 로그인 옵션

2. **고급 기능**:
   - 베이지안 랭킹 시스템 고도화
   - 아티스트 팔로우 및 알림 시스템
   - 개인화된 추천 알고리즘

3. **프리미엄 기능**:
   - 광고 제거
   - 오프라인 시청
   - 고급 필터링 및 정렬 옵션

4. **관리자 패널**:
   - 콘텐츠 관리
   - 사용자 관리
   - 데이터 분석 대시보드

# 논리적 의존성 체인

## 기초 구축
1. 모노레포 구조 설정
2. Supabase 프로젝트 및 데이터베이스 스키마 설정
3. 기본 패키지(core, api_client, ui_kit) 구현

## 플랫폼 개발
1. 크롤러 서비스 구현(YouTube 우선)
2. Flutter 앱 기본 구조 및 인증 시스템 구현
3. 비디오 피드 및 플레이어 구현
4. 검색 및 아티스트 프로필 구현

## 기능 개선
1. 투표 및 랭킹 시스템 구현
2. 북마크 및 개인화 기능 구현
3. 푸시 알림 시스템 구현
4. TikTok 통합 및 확장

# 리스크 및 완화 방안

## 기술적 도전
1. **임베디드 플레이어 통합**:
   - **리스크**: 플랫폼별 플레이어 통합 및 최적화 어려움
   - **완화 방안**: 각 플랫폼별 샘플 앱 테스트 후 최적화된 래퍼 구현

2. **크롤링 한계**:
   - **리스크**: API 제한 또는 변경으로 인한 크롤링 실패
   - **완화 방안**: 다양한 데이터 소스 활용, 요청 제한 관리, 장애 복구 메커니즘 구현

3. **성능 최적화**:
   - **리스크**: 대량의 비디오 데이터 로딩 시 성능 저하
   - **완화 방안**: 데이터 페이징, 이미지 캐싱, 지연 로딩 구현

## MVP 구축 계획
1. **핵심 기능 중심**:
   - 주요 기능(피드, 검색, 기본 플레이어)에 집중하여 기초 앱 구축
   - UI/UX는 단순하게 시작하고 점진적으로 개선

2. **확장성 고려**:
   - 향후 기능 추가를 위한 모듈식 설계
   - 플랫폼 추가를 고려한 크롤러 인터페이스 설계

## 자원 제약
1. **개발 효율화**:
   - Flutter의 크로스 플랫폼 특성 활용
   - 코드 재사용을 위한 모노레포 아키텍처
   - Supabase의 서버리스 기능 활용

2. **서비스 확장성**:
   - 사용자 증가에 따른 서버 부하 관리
   - 크롤러 작업 스케줄링 및 최적화

# 부록

## 연구 조사
- K-POP 팬덤 규모: 글로벌 K-POP 시장은 지속적인 성장세, 특히 MZ세대에서 인기
- 팬캠 소비 트렌드: 공식 뮤직비디오 외에도 팬캠이 중요한 콘텐츠로 자리매김
- 경쟁 앱 분석: 단일 플랫폼 중심 또는 일반 비디오 앱과 차별화된 K-POP 특화 필요

## 기술 명세
- **Flutter 2.15+**: 최신 Material 3 디자인
- **Supabase**: PostgreSQL 데이터베이스, RLS 보안, Edge Functions
- **FastAPI**: 비동기 Python 웹 프레임워크
- **Docker**: 크롤러 컨테이너화 및 배포
- **Firebase Cloud Messaging**: 크로스 플랫폼 푸시 알림 